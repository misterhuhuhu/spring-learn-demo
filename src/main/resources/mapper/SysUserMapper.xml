<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    <!--@Table sys_user-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="job_rank" jdbcType="VARCHAR" property="jobRank" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="view_authority" jdbcType="TINYINT" property="viewAuthority" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, account, `password`, `name`, mobile, gender, dept_id, job, job_rank, `status`,
    creator, create_time, modifier, update_time, view_authority
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    insert into sys_user (id, account, `password`,
      `name`, mobile, gender,
      dept_id, job, job_rank,
      `status`, creator, create_time,
      modifier, update_time, view_authority
      )
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
      #{deptId,jdbcType=BIGINT}, #{job,jdbcType=VARCHAR}, #{jobRank,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
      #{modifier,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{viewAuthority,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="jobRank != null">
        job_rank,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="viewAuthority != null">
        view_authority,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="jobRank != null">
        #{jobRank,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewAuthority != null">
        #{viewAuthority,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    update sys_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="jobRank != null">
        job_rank = #{jobRank,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewAuthority != null">
        view_authority = #{viewAuthority,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    update sys_user
    set account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=BIGINT},
      job = #{job,jdbcType=VARCHAR},
      job_rank = #{jobRank,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      creator = #{creator,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      view_authority = #{viewAuthority,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="account = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.account,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="mobile = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.mobile,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="gender = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.gender,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deptId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="job = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.job,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="job_rank = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.jobRank,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="creator = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="modifier = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.modifier,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="view_authority = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.viewAuthority,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sys_user
    (id, account, `password`, `name`, mobile, gender, dept_id, job, job_rank, `status`,
      creator, create_time, modifier, update_time, view_authority)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.account,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
        #{item.name,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, #{item.gender,jdbcType=INTEGER},
        #{item.deptId,jdbcType=BIGINT}, #{item.job,jdbcType=VARCHAR}, #{item.jobRank,jdbcType=VARCHAR},
        #{item.status,jdbcType=INTEGER}, #{item.creator,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP},
        #{item.modifier,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.viewAuthority,jdbcType=TINYINT}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    insert into sys_user
    (id, account, `password`, `name`, mobile, gender, dept_id, job, job_rank, `status`,
      creator, create_time, modifier, update_time, view_authority)
    values
    (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
      #{deptId,jdbcType=BIGINT}, #{job,jdbcType=VARCHAR}, #{jobRank,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
      #{modifier,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{viewAuthority,jdbcType=TINYINT}
      )
    on duplicate key update
    id = #{id,jdbcType=BIGINT},
    account = #{account,jdbcType=VARCHAR},
    `password` = #{password,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    mobile = #{mobile,jdbcType=VARCHAR},
    gender = #{gender,jdbcType=INTEGER},
    dept_id = #{deptId,jdbcType=BIGINT},
    job = #{job,jdbcType=VARCHAR},
    job_rank = #{jobRank,jdbcType=VARCHAR},
    `status` = #{status,jdbcType=INTEGER},
    creator = #{creator,jdbcType=BIGINT},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    modifier = #{modifier,jdbcType=BIGINT},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    view_authority = #{viewAuthority,jdbcType=TINYINT}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.example.demo.model.SysUser">
    <!--@mbg.generated-->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="jobRank != null">
        job_rank,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="viewAuthority != null">
        view_authority,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="jobRank != null">
        #{jobRank,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewAuthority != null">
        #{viewAuthority,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="jobRank != null">
        job_rank = #{jobRank,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewAuthority != null">
        view_authority = #{viewAuthority,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

<!--auto generated by MybatisCodeHelper on 2020-11-24-->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
  </select>

<!--auto generated by MybatisCodeHelper on 2020-11-24-->
  <select id="selectByMobileLike" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_user
    where mobile like concat('%',#{likeMobile,jdbcType=VARCHAR},'%')
  </select>
  
</mapper>